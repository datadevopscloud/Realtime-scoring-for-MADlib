#!/usr/bin/env python

#-----------------------------------------------------------------------------------------------
#   Copyright 2019 Pivotal Software
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#----------------------------------------------------------------------------------------------

# Author: Sridhar Paladugu 
# Email: spaladugu@pivotal.io
# Description: Setup a local Greenplum development sandbox using Docker.

import os
import sys
import argparse
import shlex
import subprocess

"""
    Name: setup_greenplum_docker
    Author: Sridhar Paladugu
    Description: setup a Greenplum docker container with MADlib pre-installed
    Source Image: https://hub.docker.com/r/hdlee2u/gpdb-analytics/
"""


def main():
    print "Pulling greenplum docker image ......... "
    pullCmd='docker pull hdlee2u/gpdb-analytics'
    subprocess.call(shlex.split(pullCmd))
    listCmd='docker images'
    images = subprocess.Popen(listCmd, stdout=subprocess.PIPE, shell=True).communicate()[0]
    print images
    print "starting the greenplum docker container ......."
    startCmd= 'docker run -i -d -p 9432:5432 -p 28080:28080 --name gpdb-ds --hostname mdw hdlee2u/gpdb-analytics /usr/sbin/sshd -D'
    subprocess.call(shlex.split(startCmd))
    print "starting the greenplum database  ......."
    runCmd = 'docker exec -it gpdb-ds su - gpadmin -c "/usr/local/greenplum-db/bin/gpstart -a"'
    subprocess.call(shlex.split(runCmd))
    print "Fetching state of the greenplum database  ......."
    stateCmd = 'docker exec -it gpdb-ds su - gpadmin -c "/usr/local/greenplum-db/bin/gpstate -s"'
    state = subprocess.Popen(stateCmd, stdout=subprocess.PIPE, shell=True).communicate()[0]
    print  "__________________Greenplum Status__________________"
    print state
    print  "____________________________________________________"
    print "Finished setting up local greenplum docker container!"

if __name__ == "__main__":
	main()
